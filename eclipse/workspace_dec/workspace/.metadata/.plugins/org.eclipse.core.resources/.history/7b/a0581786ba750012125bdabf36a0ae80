package multiThreading;

public class Test {

	/**
	 * @param args
	 * @throws InterruptedException 
	 */
	public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub
		/************************ THREAD TEST 
		 *  SCJP-6: Thread is the "worker," and the Runnable is the "job" to be done
		 *  by passing the Runnable as argument to the thread we are telling him to execute our Runnable.run() instead of the thread run() method
		 * *******/
		Thread th = new Thread(new MyRunnable());// Pass your Runnable to the Thread
		th.start();
		Thread th1 = new Thread(new MyRunnable());// Pass your Runnable to the Thread
		th1.start();
		//goodSynch();
		
	}
	public static synchronized void goodSynch() throws InterruptedException {
		Thread t = new Thread();
		synchronized (t) {
			t.start();
			System.out.println("X");
			t.wait(1000);
			System.out.println("Y");
		}
	}

}
