package multiThreading;
/*
 * In this example of java synchronization code is not properly 
 *synchronized 
 * because both getCount() and setCount() are not getting locked 
 * on same object and can run in parallel which results in getting incorrect count. 
 * Here getCount() will lock in Counter.class object while setCount() will lock on current object (this).
 * To make this code properly synchronized in java you need to either make both method static or non static 
 * or use java synchronized block instead of java synchronized method.

Read more: http://javarevisited.blogspot.com/2011/04/synchronization-in-java-synchronized.html#ixzz22C9MkzXM

 */
public class Counter
{
   private static int count = 0;

   public static synchronized int getCount(){
     return count;
   }

   public synchronized void setCount(int count){
      this.count = count;
   }

}
